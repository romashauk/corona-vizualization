{"version":3,"file":"static/webpack/1.c7288e002532b71c9a62.hot-update.js","sources":["webpack:///./src/api/index.ts"],"sourcesContent":["import { ITimeLineResponse, ICountry, ICountryStatistic, IDateStatistic, IVirtualizationResponse, IFeature } from '../models';\n\nexport const apiUrl = 'https://cors-anywhere.herokuapp.com/https://api.the2019ncov.com/api/';\nexport const codevizApi = 'https://cors-anywhere.herokuapp.com/https://www.covidvisualizer.com/api';\n\nexport const getAllCases = (): Promise<IDateStatistic> => {\n  return new Promise<IDateStatistic>(async (resolve, reject) => {\n    const link = `${apiUrl}/cases`;\n    fetch(link)\n      .then((res) => res.json())\n      .catch((err) => reject({ code: 401, message: err.message }))\n      .then((res) => resolve(res));\n  });\n};\n\nexport const getTimeLineNews = (): Promise<ITimeLineResponse[]> => {\n  return new Promise<ITimeLineResponse[]>((resolve, reject) => {\n    const link = `${apiUrl}/timeline`;\n    fetch(link)\n      .then((res) => res.json())\n      .catch((err) => reject({ code: 401, message: err.message }))\n      .then((res) => resolve(res));\n  });\n};\n\nexport const getCountry = (): Promise<ICountry> => {\n  return new Promise<ICountry>((resolve, reject) => {\n    fetch('http://ip-api.com/json')\n      .then((res) => res.json())\n      .catch((err) => reject({ code: 401, message: err.message }))\n      .then((res) => resolve({ status: res.status, country: res.country }));\n  });\n};\n\nexport const getDataForMap = (): Promise<IVirtualizationResponse> => {\n  return new Promise<IVirtualizationResponse>((resolve, reject) => {\n    fetch(codevizApi)\n      .then((res) => res.json())\n      .catch((err) => reject({ code: 401, message: err.message }))\n      .then((res) => resolve(res));\n  });\n};\n\nexport const getD3Data = (): Promise<IFeature[]> => {\n  return new Promise<IFeature[]>((resolve, reject) => {\n    fetch('https://vasturiano.github.io/globe.gl/example/datasets/ne_110m_admin_0_countries.geojson')\n      .then((res) => res.json())\n      .then((res) => console.log(res))\n      .catch((err) => reject({ code: 401, message: err.message }));\n  });\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;A","sourceRoot":""}