{"ast":null,"code":"var _jsxFileName = \"/Users/roman/Desktop/projects/corona/src/containers/HomePage/NewsBlock.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { trimText } from '../../utils/helpers';\nimport styles from './styles.module.scss';\n\nconst NewsBlock = props => {\n  const {\n    time,\n    date,\n    isFirst\n  } = props.data;\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(isFirst);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const renderNewsItems = () => {\n    if (time.length) {\n      return time.map((newsItem, counter) => __jsx(\"div\", {\n        key: counter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, __jsx(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        target: \"_blank\",\n        href: newsItem.source,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, trimText(newsItem.description, 50))), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, newsItem.description)));\n    }\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, date), __jsx(\"div\", {\n    className: styles.newsCounter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, time.length)), renderNewsItems());\n};\n\nexport default NewsBlock;","map":{"version":3,"sources":["/Users/roman/Desktop/projects/corona/src/containers/HomePage/NewsBlock.tsx"],"names":["React","useState","trimText","styles","NewsBlock","props","time","date","isFirst","data","isOpen","setIsOpen","toggle","renderNewsItems","length","map","newsItem","counter","source","description","header","newsCounter"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAuD,OAAvD;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAOA,MAAMC,SAAwC,GAAIC,KAAD,IAAW;AAC1D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA;AAAd,MAA0BH,KAAK,CAACI,IAAtC;AACA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBV,QAAQ,CAAUO,OAAV,CAApC;;AACA,QAAMI,MAAM,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAA9B;;AACA,QAAMG,eAAe,GAAG,MAAM;AAC5B,QAAIP,IAAI,CAACQ,MAAT,EAAiB;AACf,aAAOR,IAAI,CAACS,GAAL,CAAS,CAACC,QAAD,EAAkBC,OAAlB,KACd;AAAK,QAAA,GAAG,EAAEA,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,MAAM,EAAC,QAAV;AAAmB,QAAA,IAAI,EAAED,QAAQ,CAACE,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGhB,QAAQ,CAACc,QAAQ,CAACG,WAAV,EAAuB,EAAvB,CADX,CADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIH,QAAQ,CAACG,WAAb,CANF,CADK,CAAP;AAUD;AACF,GAbD;;AAcA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEhB,MAAM,CAACiB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKb,IAAL,CADF,EAEE;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAACkB,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCf,IAAI,CAACQ,MAA1C,CAFF,CADF,EAKGD,eAAe,EALlB,CADF;AASD,CA3BD;;AA6BA,eAAeT,SAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { ITimeLineResponse, INews } from '../../models';\nimport { trimText } from '../../utils/helpers';\nimport styles from './styles.module.scss';\n\nexport interface INewsBlockItemProps {\n  data: ITimeLineResponse;\n  isFirst: boolean;\n}\n\nconst NewsBlock: React.FC<INewsBlockItemProps> = (props) => {\n  const { time, date, isFirst } = props.data;\n  const [isOpen, setIsOpen] = useState<boolean>(isFirst);\n  const toggle = () => setIsOpen(!isOpen);\n  const renderNewsItems = () => {\n    if (time.length) {\n      return time.map((newsItem: INews, counter: number) => (\n        <div key={counter}>\n          <h4>\n            <a target=\"_blank\" href={newsItem.source}>\n              {trimText(newsItem.description, 50)}\n            </a>\n          </h4>\n          <p>{newsItem.description}</p>\n        </div>\n      ));\n    }\n  };\n  return (\n    <div>\n      <div className={styles.header}>\n        <h3>{date}</h3>\n        <div className={styles.newsCounter}>{time.length}</div>\n      </div>\n      {renderNewsItems()}\n    </div>\n  );\n};\n\nexport default NewsBlock;\n"]},"metadata":{},"sourceType":"module"}