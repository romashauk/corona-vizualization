{"ast":null,"code":"var _jsxFileName = \"/Users/roman/Desktop/projects/corona/src/containers/HomePage/NewsBlock.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { trimText } from '../../utils/helpers';\nimport styles from './styles.module.scss';\nimport { Collapse, Button } from 'reactstrap';\n\nvar NewsBlock = function NewsBlock(props) {\n  var _props$data = props.data,\n      time = _props$data.time,\n      date = _props$data.date;\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var toggle = function toggle() {\n    return setIsOpen(!isOpen);\n  };\n\n  var renderNewsItems = function renderNewsItems(from, to) {\n    if (time.length) {\n      var news = time.slice(from, to);\n      return news.map(function (newsItem, counter) {\n        return __jsx(\"div\", {\n          key: counter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, __jsx(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          target: \"_blank\",\n          href: newsItem.source,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, trimText(newsItem.description, 50))), __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, newsItem.description));\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, date), __jsx(\"div\", {\n    className: styles.newsCounter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, time.length)), renderNewsItems(0, 10), __jsx(\"div\", {\n    className: \"d-flex justify-content-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, !isOpen ? __jsx(Button, {\n    onClick: toggle,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Show more\")) : __jsx(React.Fragment, null)), __jsx(Collapse, {\n    isOpen: isOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, renderNewsItems(11, time.length), __jsx(\"div\", {\n    className: \"d-flex justify-content-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, isOpen ? __jsx(Button, {\n    onClick: toggle,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Hide\")) : __jsx(React.Fragment, null))));\n};\n\nexport default React.memo(NewsBlock);","map":{"version":3,"sources":["/Users/roman/Desktop/projects/corona/src/containers/HomePage/NewsBlock.tsx"],"names":["React","useState","trimText","styles","Collapse","Button","NewsBlock","props","data","time","date","isOpen","setIsOpen","toggle","renderNewsItems","from","to","length","news","slice","map","newsItem","counter","source","description","header","newsCounter","memo"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAuD,OAAvD;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,YAAjC;;AAMA,IAAMC,SAAwC,GAAG,SAA3CA,SAA2C,CAACC,KAAD,EAAW;AAAA,oBACnCA,KAAK,CAACC,IAD6B;AAAA,MAClDC,IADkD,eAClDA,IADkD;AAAA,MAC5CC,IAD4C,eAC5CA,IAD4C;;AAAA,kBAE9BT,QAAQ,CAAU,KAAV,CAFsB;AAAA,MAEnDU,MAFmD;AAAA,MAE3CC,SAF2C;;AAG1D,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,WAAMD,SAAS,CAAC,CAACD,MAAF,CAAf;AAAA,GAAf;;AACA,MAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAeC,EAAf,EAA8B;AACpD,QAAIP,IAAI,CAACQ,MAAT,EAAiB;AACf,UAAMC,IAAI,GAAGT,IAAI,CAACU,KAAL,CAAWJ,IAAX,EAAiBC,EAAjB,CAAb;AACA,aAAOE,IAAI,CAACE,GAAL,CAAS,UAACC,QAAD,EAAkBC,OAAlB;AAAA,eACd;AAAK,UAAA,GAAG,EAAEA,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,MAAM,EAAC,QAAV;AAAmB,UAAA,IAAI,EAAED,QAAQ,CAACE,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGrB,QAAQ,CAACmB,QAAQ,CAACG,WAAV,EAAuB,EAAvB,CADX,CADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIH,QAAQ,CAACG,WAAb,CANF,CADc;AAAA,OAAT,CAAP;AAUD;AACF,GAdD;;AAeA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAErB,MAAM,CAACsB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKf,IAAL,CADF,EAEE;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACuB,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCjB,IAAI,CAACQ,MAA1C,CAFF,CADF,EAKGH,eAAe,CAAC,CAAD,EAAI,EAAJ,CALlB,EAME;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACH,MAAD,GACC,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEE,MAAjB;AAAyB,IAAA,KAAK,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADD,GAKC,2BANJ,CANF,EAeE,MAAC,QAAD;AAAU,IAAA,MAAM,EAAEF,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,eAAe,CAAC,EAAD,EAAKL,IAAI,CAACQ,MAAV,CADlB,EAEE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,MAAM,GACL,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEE,MAAjB;AAAyB,IAAA,KAAK,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADK,GAKL,2BANJ,CAFF,CAfF,CADF;AA8BD,CAjDD;;AAmDA,eAAeb,KAAK,CAAC2B,IAAN,CAAWrB,SAAX,CAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { ITimeLineResponse, INews } from '../../models';\nimport { trimText } from '../../utils/helpers';\nimport styles from './styles.module.scss';\nimport { Collapse, Button } from 'reactstrap';\n\nexport interface INewsBlockItemProps {\n  data: ITimeLineResponse;\n}\n\nconst NewsBlock: React.FC<INewsBlockItemProps> = (props) => {\n  const { time, date } = props.data;\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const toggle = () => setIsOpen(!isOpen);\n  const renderNewsItems = (from: number, to: number) => {\n    if (time.length) {\n      const news = time.slice(from, to);\n      return news.map((newsItem: INews, counter: number) => (\n        <div key={counter}>\n          <h4>\n            <a target=\"_blank\" href={newsItem.source}>\n              {trimText(newsItem.description, 50)}\n            </a>\n          </h4>\n          <p>{newsItem.description}</p>\n        </div>\n      ));\n    }\n  };\n  return (\n    <div>\n      <div className={styles.header}>\n        <h3>{date}</h3>\n        <div className={styles.newsCounter}>{time.length}</div>\n      </div>\n      {renderNewsItems(0, 10)}\n      <div className=\"d-flex justify-content-end\">\n        {!isOpen ? (\n          <Button onClick={toggle} color=\"secondary\">\n            <span>Show more</span>\n          </Button>\n        ) : (\n          <></>\n        )}\n      </div>\n      <Collapse isOpen={isOpen}>\n        {renderNewsItems(11, time.length)}\n        <div className=\"d-flex justify-content-end\">\n          {isOpen ? (\n            <Button onClick={toggle} color=\"secondary\">\n              <span>Hide</span>\n            </Button>\n          ) : (\n            <></>\n          )}\n        </div>\n      </Collapse>\n    </div>\n  );\n};\n\nexport default React.memo(NewsBlock);\n"]},"metadata":{},"sourceType":"module"}