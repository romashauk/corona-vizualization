{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nexport const apiUrl = 'https://cors-anywhere.herokuapp.com/https://api.the2019ncov.com/api/';\nexport const getAllCases = () => {\n  return new _Promise(async (resolve, reject) => {});\n};\nexport const getTimeLineNews = () => {\n  return new _Promise((resolve, reject) => {\n    const link = `${apiUrl}/timeline`;\n    fetch(link).then(res => res.json()).catch(err => reject({\n      code: 401,\n      message: err.message\n    })).then(res => resolve(res));\n  });\n};\nexport const getCountry = () => {\n  return new _Promise((resolve, reject) => {\n    fetch('http://ip-api.com/json').then(res => res.json()).catch(err => reject({\n      code: 401,\n      message: err.message\n    })).then(res => resolve({\n      status: res.status,\n      country: res.country\n    }));\n  });\n};","map":{"version":3,"sources":["/Users/roman/Desktop/projects/corona/src/api/index.ts"],"names":["apiUrl","getAllCases","resolve","reject","getTimeLineNews","link","fetch","then","res","json","catch","err","code","message","getCountry","status","country"],"mappings":";AACA,OAAO,MAAMA,MAAM,GAAG,sEAAf;AAEP,OAAO,MAAMC,WAAW,GAAG,MAAkC;AAC3D,SAAO,aAA+B,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B,CAAE,CAA5D,CAAP;AACD,CAFM;AAIP,OAAO,MAAMC,eAAe,GAAG,MAAoC;AACjE,SAAO,aAAiC,CAACF,OAAD,EAAUC,MAAV,KAAqB;AAC3D,UAAME,IAAI,GAAI,GAAEL,MAAO,WAAvB;AACAM,IAAAA,KAAK,CAACD,IAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGC,KAFH,CAEUC,GAAD,IAASR,MAAM,CAAC;AAAES,MAAAA,IAAI,EAAE,GAAR;AAAaC,MAAAA,OAAO,EAAEF,GAAG,CAACE;AAA1B,KAAD,CAFxB,EAGGN,IAHH,CAGSC,GAAD,IAASN,OAAO,CAACM,GAAD,CAHxB;AAID,GANM,CAAP;AAOD,CARM;AAUP,OAAO,MAAMM,UAAU,GAAG,MAAyB;AACjD,SAAO,aAAsB,CAACZ,OAAD,EAAUC,MAAV,KAAqB;AAChDG,IAAAA,KAAK,CAAC,wBAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGC,KAFH,CAEUC,GAAD,IAASR,MAAM,CAAC;AAAES,MAAAA,IAAI,EAAE,GAAR;AAAaC,MAAAA,OAAO,EAAEF,GAAG,CAACE;AAA1B,KAAD,CAFxB,EAGGN,IAHH,CAGSC,GAAD,IAASN,OAAO,CAAC;AAAEa,MAAAA,MAAM,EAAEP,GAAG,CAACO,MAAd;AAAsBC,MAAAA,OAAO,EAAER,GAAG,CAACQ;AAAnC,KAAD,CAHxB;AAID,GALM,CAAP;AAMD,CAPM","sourcesContent":["import { ITimeLineResponse, ICountry, ICountryStatistic } from '../models';\nexport const apiUrl = 'https://cors-anywhere.herokuapp.com/https://api.the2019ncov.com/api/';\n\nexport const getAllCases = (): Promise<ICountryStatistic> => {\n  return new Promise<ICountryStatistic>(async (resolve, reject) => {});\n};\n\nexport const getTimeLineNews = (): Promise<ITimeLineResponse[]> => {\n  return new Promise<ITimeLineResponse[]>((resolve, reject) => {\n    const link = `${apiUrl}/timeline`;\n    fetch(link)\n      .then((res) => res.json())\n      .catch((err) => reject({ code: 401, message: err.message }))\n      .then((res) => resolve(res));\n  });\n};\n\nexport const getCountry = (): Promise<ICountry> => {\n  return new Promise<ICountry>((resolve, reject) => {\n    fetch('http://ip-api.com/json')\n      .then((res) => res.json())\n      .catch((err) => reject({ code: 401, message: err.message }))\n      .then((res) => resolve({ status: res.status, country: res.country }));\n  });\n};\n"]},"metadata":{},"sourceType":"module"}