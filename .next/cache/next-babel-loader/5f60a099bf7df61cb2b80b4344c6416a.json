{"ast":null,"code":"var _jsxFileName = \"/Users/roman/Desktop/projects/corona/src/containers/HomePage/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { getTimeLineNews } from '../../api';\n\nconst HomePage = () => {\n  const {\n    0: news,\n    1: setNewsList\n  } = useState();\n  const {\n    0: isLoaded,\n    1: handleLoaded\n  } = useState(false);\n\n  const fetchNews = async () => {\n    const newsResponse = await getTimeLineNews();\n    setNewsList(newsResponse);\n  };\n\n  useEffect(() => {\n    fetchNews();\n  }, []);\n  useEffect(() => {\n    if (news) {\n      handleLoaded(true);\n    }\n  }, [news]);\n\n  const renderNews = () => {\n    if (news && news.length) {\n      return news.map(newsItem => __jsx(\"div\", {\n        key: newsItem.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, newsItem.date));\n    } else __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"No news yet\");\n  };\n\n  if (!isLoaded) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  }\n\n  return __jsx(React.Fragment, null, \"renderNews()\");\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/roman/Desktop/projects/corona/src/containers/HomePage/index.tsx"],"names":["React","useState","useEffect","getTimeLineNews","HomePage","news","setNewsList","isLoaded","handleLoaded","fetchNews","newsResponse","renderNews","length","map","newsItem","date"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAsCC,SAAtC,QAAuD,OAAvD;AAEA,SAASC,eAAT,QAAgC,WAAhC;;AAGA,MAAMC,QAAkB,GAAG,MAAM;AAC/B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAsBL,QAAQ,EAApC;AACA,QAAM;AAAA,OAACM,QAAD;AAAA,OAAWC;AAAX,MAA2BP,QAAQ,CAAU,KAAV,CAAzC;;AAEA,QAAMQ,SAAS,GAAG,YAAY;AAC5B,UAAMC,YAAY,GAAG,MAAMP,eAAe,EAA1C;AACAG,IAAAA,WAAW,CAACI,YAAD,CAAX;AACD,GAHD;;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,IAAJ,EAAU;AACRG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GAJQ,EAIN,CAACH,IAAD,CAJM,CAAT;;AAMA,QAAMM,UAAU,GAAG,MAAM;AACvB,QAAIN,IAAI,IAAIA,IAAI,CAACO,MAAjB,EAAyB;AACvB,aAAOP,IAAI,CAACQ,GAAL,CAAUC,QAAD,IAAiC;AAAK,QAAA,GAAG,EAAEA,QAAQ,CAACC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BD,QAAQ,CAACC,IAAnC,CAA1C,CAAP;AACD,KAFD,MAEO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACR,GAJD;;AAMA,MAAI,CAACR,QAAL,EAAe;AACb,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SAAO,2CAAP;AACD,CA9BD;;AAgCA,eAAeH,QAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport styles from './styles.module.scss';\nimport { getTimeLineNews } from '../../api';\nimport { ITimeLineResponse } from '../../models';\n\nconst HomePage: React.FC = () => {\n  const [news, setNewsList] = useState<ITimeLineResponse[]>();\n  const [isLoaded, handleLoaded] = useState<boolean>(false);\n\n  const fetchNews = async () => {\n    const newsResponse = await getTimeLineNews();\n    setNewsList(newsResponse);\n  };\n\n  useEffect(() => {\n    fetchNews();\n  }, []);\n\n  useEffect(() => {\n    if (news) {\n      handleLoaded(true);\n    }\n  }, [news]);\n\n  const renderNews = () => {\n    if (news && news.length) {\n      return news.map((newsItem: ITimeLineResponse) => <div key={newsItem.date}>{newsItem.date}</div>);\n    } else <div>No news yet</div>;\n  };\n\n  if (!isLoaded) {\n    return <div></div>;\n  }\n\n  return <>renderNews()</>;\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}