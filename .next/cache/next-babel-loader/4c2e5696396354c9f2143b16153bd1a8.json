{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/roman/Desktop/projects/corona/src/containers/HomePage/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport styles from './styles.module.scss';\nimport { getTimeLineNews } from '../../api';\nimport NewsBlock from './NewsBlock';\nimport Loader from '../../components/Loader';\n\nvar NewsPage = function NewsPage() {\n  var _useState = useState(),\n      news = _useState[0],\n      setNewsList = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoaded = _useState2[0],\n      handleLoaded = _useState2[1];\n\n  var fetchNews = function fetchNews() {\n    var newsResponse;\n    return _regeneratorRuntime.async(function fetchNews$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getTimeLineNews());\n\n          case 2:\n            newsResponse = _context.sent;\n            setNewsList(newsResponse);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  useEffect(function () {\n    fetchNews();\n  }, []);\n  useEffect(function () {\n    if (news) {\n      handleLoaded(true);\n    }\n  }, [news]);\n\n  var renderNews = function renderNews() {\n    if (news && news.length) {\n      return news.map(function (newsItem) {\n        return __jsx(NewsBlock, {\n          data: newsItem,\n          key: newsItem.date,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        });\n      });\n    } else {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"No news yet\");\n    }\n  };\n\n  if (!isLoaded) {\n    return __jsx(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  }\n\n  return __jsx(\"div\", {\n    className: styles.newsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, renderNews());\n};\n\nexport default NewsPage;","map":{"version":3,"sources":["/Users/roman/Desktop/projects/corona/src/containers/HomePage/index.tsx"],"names":["React","useState","useEffect","styles","getTimeLineNews","NewsBlock","Loader","NewsPage","news","setNewsList","isLoaded","handleLoaded","fetchNews","newsResponse","renderNews","length","map","newsItem","date","newsContainer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,eAAT,QAAgC,WAAhC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,IAAMC,QAAkB,GAAG,SAArBA,QAAqB,GAAM;AAAA,kBACHN,QAAQ,EADL;AAAA,MACxBO,IADwB;AAAA,MAClBC,WADkB;;AAAA,mBAEER,QAAQ,CAAU,KAAV,CAFV;AAAA,MAExBS,QAFwB;AAAA,MAEdC,YAFc;;AAI/B,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACWR,eAAe,EAD1B;;AAAA;AACVS,YAAAA,YADU;AAEhBJ,YAAAA,WAAW,CAACI,YAAD,CAAX;;AAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAKAX,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIAV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIM,IAAJ,EAAU;AACRG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GAJQ,EAIN,CAACH,IAAD,CAJM,CAAT;;AAMA,MAAMM,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAIN,IAAI,IAAIA,IAAI,CAACO,MAAjB,EAAyB;AACvB,aAAOP,IAAI,CAACQ,GAAL,CAAS,UAACC,QAAD;AAAA,eAAiC,MAAC,SAAD;AAAW,UAAA,IAAI,EAAEA,QAAjB;AAA2B,UAAA,GAAG,EAAEA,QAAQ,CAACC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjC;AAAA,OAAT,CAAP;AACD,KAFD,MAEO;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD;AACF,GAND;;AAQA,MAAI,CAACR,QAAL,EAAe;AACb,WAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SAAO;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACgB,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCL,UAAU,EAAjD,CAAP;AACD,CAhCD;;AAkCA,eAAeP,QAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport styles from './styles.module.scss';\nimport { getTimeLineNews } from '../../api';\nimport { ITimeLineResponse } from '../../models';\nimport NewsBlock from './NewsBlock';\nimport Loader from '../../components/Loader';\n\nconst NewsPage: React.FC = () => {\n  const [news, setNewsList] = useState<ITimeLineResponse[]>();\n  const [isLoaded, handleLoaded] = useState<boolean>(false);\n\n  const fetchNews = async () => {\n    const newsResponse = await getTimeLineNews();\n    setNewsList(newsResponse);\n  };\n\n  useEffect(() => {\n    fetchNews();\n  }, []);\n\n  useEffect(() => {\n    if (news) {\n      handleLoaded(true);\n    }\n  }, [news]);\n\n  const renderNews = () => {\n    if (news && news.length) {\n      return news.map((newsItem: ITimeLineResponse) => <NewsBlock data={newsItem} key={newsItem.date} />);\n    } else {\n      return <div>No news yet</div>;\n    }\n  };\n\n  if (!isLoaded) {\n    return <Loader />;\n  }\n\n  return <div className={styles.newsContainer}>{renderNews()}</div>;\n};\n\nexport default NewsPage;\n"]},"metadata":{},"sourceType":"module"}