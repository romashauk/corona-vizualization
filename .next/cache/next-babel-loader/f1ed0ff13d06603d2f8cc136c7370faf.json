{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nexport const apiUrl = 'https://cors-anywhere.herokuapp.com/https://api.the2019ncov.com/api/';\nexport const codevizApi = 'https://cors-anywhere.herokuapp.com/https://www.covidvisualizer.com/api';\nexport const getAllCases = () => {\n  return new _Promise(async (resolve, reject) => {\n    const link = `${apiUrl}/cases`;\n    fetch(link).then(res => res.json()).catch(err => reject({\n      code: 401,\n      message: err.message\n    })).then(res => resolve(res));\n  });\n};\nexport const getTimeLineNews = () => {\n  return new _Promise((resolve, reject) => {\n    const link = `${apiUrl}/timeline`;\n    fetch(link).then(res => res.json()).catch(err => reject({\n      code: 401,\n      message: err.message\n    })).then(res => resolve(res));\n  });\n};\nexport const getCountry = () => {\n  return new _Promise((resolve, reject) => {\n    fetch('http://ip-api.com/json').then(res => res.json()).catch(err => reject({\n      code: 401,\n      message: err.message\n    })).then(res => resolve({\n      status: res.status,\n      country: res.country\n    }));\n  });\n};\nexport const getDataForMap = () => {\n  return new _Promise((resolve, reject) => {\n    fetch(codevizApi).then(res => res.json()).catch(err => reject({\n      code: 401,\n      message: err.message\n    })).then(res => resolve(res));\n  });\n};\nexport const getD3Data = () => {\n  return new _Promise((resolve, reject) => {\n    fetch('https://vasturiano.github.io/globe.gl/example/datasets/ne_110m_admin_0_countries.geojson').then(res => res.json()).then(res => resolve(res.features)).catch(err => reject({\n      code: 401,\n      message: err.message\n    }));\n  });\n};","map":null,"metadata":{},"sourceType":"module"}