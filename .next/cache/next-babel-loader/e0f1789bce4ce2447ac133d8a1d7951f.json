{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { trimText } from '../../utils/helpers';\nimport styles from './styles.module.scss';\nimport { Collapse, Button } from 'reactstrap';\n\nconst NewsBlock = props => {\n  const {\n    time,\n    date\n  } = props.data;\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const renderNewsItems = (from, to) => {\n    if (time.length) {\n      const news = time.slice(from, to);\n      return news.map((newsItem, counter) => __jsx(\"div\", {\n        key: counter\n      }, __jsx(\"h4\", null, __jsx(\"a\", {\n        target: \"_blank\",\n        href: newsItem.source\n      }, trimText(newsItem.description, 50))), __jsx(\"p\", null, newsItem.description)));\n    }\n  };\n\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: styles.header\n  }, __jsx(\"h3\", null, date), __jsx(\"div\", {\n    className: styles.newsCounter\n  }, time.length)), renderNewsItems(0, 10), __jsx(\"div\", {\n    className: \"d-flex justify-content-end\"\n  }, !isOpen ? __jsx(Button, {\n    onClick: toggle,\n    color: \"secondary\"\n  }, __jsx(\"span\", null, \"Show more\")) : __jsx(React.Fragment, null)), __jsx(Collapse, {\n    isOpen: isOpen\n  }, renderNewsItems(11, time.length), __jsx(\"div\", {\n    className: \"d-flex justify-content-end\"\n  }, isOpen ? __jsx(Button, {\n    onClick: toggle,\n    color: \"secondary\"\n  }, __jsx(\"span\", null, \"Hide\")) : __jsx(React.Fragment, null))));\n};\n\nexport default React.memo(NewsBlock);","map":null,"metadata":{},"sourceType":"module"}