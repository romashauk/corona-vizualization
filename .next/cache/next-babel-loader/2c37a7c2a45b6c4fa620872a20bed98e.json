{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/roman/Desktop/projects/corona/src/containers/WorldMap/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport styles from './styles.module.scss';\nimport { getDataForMap } from '../../api';\nimport Loader from '../../components/Loader';\n\nvar WorldMap = function WorldMap() {\n  var _useState = useState(false),\n      isLoaded = _useState[0],\n      handleLoaded = _useState[1];\n\n  var _useState2 = useState(),\n      data = _useState2[0],\n      handleData = _useState2[1];\n\n  var fetchData = function fetchData() {\n    var newsResponse;\n    return _regeneratorRuntime.async(function fetchData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getDataForMap());\n\n          case 2:\n            newsResponse = _context.sent;\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  useEffect(function () {\n    fetchData();\n  }, []);\n\n  if (!isLoaded) {\n    return __jsx(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  }\n\n  return __jsx(\"div\", {\n    className: styles.worldMapContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"123\");\n};\n\nexport default WorldMap;","map":{"version":3,"sources":["/Users/roman/Desktop/projects/corona/src/containers/WorldMap/index.tsx"],"names":["React","useState","useEffect","styles","getDataForMap","Loader","WorldMap","isLoaded","handleLoaded","data","handleData","fetchData","newsResponse","worldMapContainer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAGA,IAAMC,QAAkB,GAAG,SAArBA,QAAqB,GAAM;AAAA,kBACEL,QAAQ,CAAU,KAAV,CADV;AAAA,MACxBM,QADwB;AAAA,MACdC,YADc;;AAAA,mBAEJP,QAAQ,EAFJ;AAAA,MAExBQ,IAFwB;AAAA,MAElBC,UAFkB;;AAG/B,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACWP,aAAa,EADxB;;AAAA;AACVQ,YAAAA,YADU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAIAV,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAI,CAACJ,QAAL,EAAe;AACb,WAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SAAO;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAACU,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAhBD;;AAkBA,eAAeP,QAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport styles from './styles.module.scss';\nimport { getDataForMap } from '../../api';\nimport Loader from '../../components/Loader';\nimport { IVirtualizationResponse } from '../../models';\n\nconst WorldMap: React.FC = () => {\n  const [isLoaded, handleLoaded] = useState<boolean>(false);\n  const [data, handleData] = useState<IVirtualizationResponse>();\n  const fetchData = async () => {\n    const newsResponse = await getDataForMap();\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  if (!isLoaded) {\n    return <Loader />;\n  }\n\n  return <div className={styles.worldMapContainer}>123</div>;\n};\n\nexport default WorldMap;\n"]},"metadata":{},"sourceType":"module"}