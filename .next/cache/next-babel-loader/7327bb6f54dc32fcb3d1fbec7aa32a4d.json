{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport styles from './styles.module.scss';\nimport { getTimeLineNews } from '../../api';\nimport NewsBlock from './NewsBlock';\nimport Loader from '../../components/Loader';\n\nvar NewsPage = function NewsPage() {\n  var _useState = useState(),\n      news = _useState[0],\n      setNewsList = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoaded = _useState2[0],\n      handleLoaded = _useState2[1];\n\n  var fetchNews = function fetchNews() {\n    var newsResponse;\n    return _regeneratorRuntime.async(function fetchNews$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getTimeLineNews());\n\n          case 2:\n            newsResponse = _context.sent;\n            setNewsList(newsResponse);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  useEffect(function () {\n    fetchNews();\n  }, []);\n  useEffect(function () {\n    if (news) {\n      handleLoaded(true);\n    }\n  }, [news]);\n\n  var renderNews = function renderNews() {\n    if (news && news.length) {\n      return news.map(function (newsItem) {\n        return __jsx(NewsBlock, {\n          data: newsItem,\n          key: newsItem.date\n        });\n      });\n    } else {\n      return __jsx(\"div\", null, \"No news yet\");\n    }\n  };\n\n  if (!isLoaded) {\n    return __jsx(Loader, null);\n  }\n\n  return __jsx(\"div\", {\n    className: styles.newsContainer\n  }, renderNews());\n};\n\nexport default NewsPage;","map":null,"metadata":{},"sourceType":"module"}