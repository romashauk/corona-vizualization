{"ast":null,"code":"var _jsxFileName = \"/Users/roman/Desktop/projects/corona/src/containers/HomePage/NewsBlock.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { trimText } from '../../utils/helpers';\nimport styles from './styles.module.scss';\n\nvar NewsBlock = function NewsBlock(props) {\n  var _props$data = props.data,\n      time = _props$data.time,\n      date = _props$data.date;\n\n  var _useState = useState(props.isFirst),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var toggle = function toggle() {\n    return setIsOpen(!isOpen);\n  };\n\n  var renderNewsItems = function renderNewsItems() {\n    if (time.length) {\n      return time.map(function (newsItem, counter) {\n        return __jsx(\"div\", {\n          key: counter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, __jsx(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          target: \"_blank\",\n          href: newsItem.source,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, trimText(newsItem.description, 50))), __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, newsItem.description));\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, date), __jsx(\"div\", {\n    className: styles.newsCounter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, time.length)), renderNewsItems());\n};\n\nexport default NewsBlock;","map":{"version":3,"sources":["/Users/roman/Desktop/projects/corona/src/containers/HomePage/NewsBlock.tsx"],"names":["React","useState","trimText","styles","NewsBlock","props","data","time","date","isFirst","isOpen","setIsOpen","toggle","renderNewsItems","length","map","newsItem","counter","source","description","header","newsCounter"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAuD,OAAvD;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAOA,IAAMC,SAAwC,GAAG,SAA3CA,SAA2C,CAACC,KAAD,EAAW;AAAA,oBACnCA,KAAK,CAACC,IAD6B;AAAA,MAClDC,IADkD,eAClDA,IADkD;AAAA,MAC5CC,IAD4C,eAC5CA,IAD4C;;AAAA,kBAE9BP,QAAQ,CAAUI,KAAK,CAACI,OAAhB,CAFsB;AAAA,MAEnDC,MAFmD;AAAA,MAE3CC,SAF2C;;AAG1D,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,WAAMD,SAAS,CAAC,CAACD,MAAF,CAAf;AAAA,GAAf;;AACA,MAAMG,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,QAAIN,IAAI,CAACO,MAAT,EAAiB;AACf,aAAOP,IAAI,CAACQ,GAAL,CAAS,UAACC,QAAD,EAAkBC,OAAlB;AAAA,eACd;AAAK,UAAA,GAAG,EAAEA,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,MAAM,EAAC,QAAV;AAAmB,UAAA,IAAI,EAAED,QAAQ,CAACE,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGhB,QAAQ,CAACc,QAAQ,CAACG,WAAV,EAAuB,EAAvB,CADX,CADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIH,QAAQ,CAACG,WAAb,CANF,CADc;AAAA,OAAT,CAAP;AAUD;AACF,GAbD;;AAcA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEhB,MAAM,CAACiB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,IAAL,CADF,EAEE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACkB,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCd,IAAI,CAACO,MAA1C,CAFF,CADF,EAKGD,eAAe,EALlB,CADF;AASD,CA3BD;;AA6BA,eAAeT,SAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { ITimeLineResponse, INews } from '../../models';\nimport { trimText } from '../../utils/helpers';\nimport styles from './styles.module.scss';\n\nexport interface INewsBlockItemProps {\n  data: ITimeLineResponse;\n  isFirst: boolean;\n}\n\nconst NewsBlock: React.FC<INewsBlockItemProps> = (props) => {\n  const { time, date } = props.data;\n  const [isOpen, setIsOpen] = useState<boolean>(props.isFirst);\n  const toggle = () => setIsOpen(!isOpen);\n  const renderNewsItems = () => {\n    if (time.length) {\n      return time.map((newsItem: INews, counter: number) => (\n        <div key={counter}>\n          <h4>\n            <a target=\"_blank\" href={newsItem.source}>\n              {trimText(newsItem.description, 50)}\n            </a>\n          </h4>\n          <p>{newsItem.description}</p>\n        </div>\n      ));\n    }\n  };\n  return (\n    <div>\n      <div className={styles.header}>\n        <h3>{date}</h3>\n        <div className={styles.newsCounter}>{time.length}</div>\n      </div>\n      {renderNewsItems()}\n    </div>\n  );\n};\n\nexport default NewsBlock;\n"]},"metadata":{},"sourceType":"module"}